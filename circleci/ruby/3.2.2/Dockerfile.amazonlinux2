###########################################################################
#
#--------------------------------------------------------------------------
# Image Setup
#--------------------------------------------------------------------------
#
# To change its version, see the available Tags on the Docker Hub:
#    https://hub.docker.com/r/fromscratch/ruby/tags/
#
# Note: Base Image name format fromscratch/ruby:{ruby-version}-amazonlinux{amazonlinux-version}-{ami-version}
#
###########################################################################

FROM amazonlinux:2.0.20230822.0

LABEL maintainer "from scratch Co.Ltd."

###########################################################################
# Versions:
###########################################################################

ENV RUBY_MAJOR 3.2
ENV RUBY_VERSION 3.2.2
ENV NODE_VERSION 12.18.0
ENV YARN_VERSION 1.22.5

###########################################################################
# Set Timezone
###########################################################################

ENV TZ Asia/Tokyo
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

###########################################################################
# Common:
###########################################################################

RUN echo "sslverify=false" >> /etc/yum.conf
RUN yum install -y git gcc gcc-c++ openssl openssl-devel readline readline-devel mysql mysql-devel bzip2 postgresql postgresql-devel sudo tar libiodbc unixODBC.x86_64 unixODBC-devel.x86_64 libyaml libyaml-devel autoconf

###########################################################################
# Ruby:
###########################################################################

RUN mkdir -p /build/ruby
RUN curl -k -o ruby.tar.gz https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR/ruby-$RUBY_VERSION.tar.gz
RUN tar -C /build/ruby -xzf ruby.tar.gz && rm ruby.tar.gz
RUN cd /build/ruby/ruby-$RUBY_VERSION && \
    ./configure --disable-install-doc && \
    make && make install && \
    gem install bundler && \
    rm -fr /build/ruby

###########################################################################
# node:
###########################################################################

ENV NVM_DIR /root/.nvm

RUN echo $HOME && \
    curl -k -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash && \
    . $NVM_DIR/nvm.sh && nvm install ${NODE_VERSION} && \
    nvm use ${NODE_VERSION} && \
    nvm alias ${NODE_VERSION} && \
    npm install eslint --save-dev && \
    echo "" >> ~/.bashrc && \
    echo 'export NVM_DIR="$HOME/.nvm"' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm' >> ~/.bashrc && \
    echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion' >> ~/.bashrc

###########################################################################
# YARN:
###########################################################################

RUN . $NVM_DIR/nvm.sh && nvm use ${NODE_VERSION} && npm install -g yarn

ENV PATH /root/.nvm/versions/node/v${NODE_VERSION}/bin:$PATH

###########################################################################
# awscli and socat:
###########################################################################

RUN yum install -y python3 python3-devel
RUN pip3 install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org --upgrade pip

RUN pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org --upgrade setuptools && \
    pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host=files.pythonhosted.org awscli

###########################################################################
# update sudoers
###########################################################################

RUN sed -i "/secure_path/c\Defaults    secure_path = $PATH" /etc/sudoers

WORKDIR /target

CMD ["/bin/bash"]
